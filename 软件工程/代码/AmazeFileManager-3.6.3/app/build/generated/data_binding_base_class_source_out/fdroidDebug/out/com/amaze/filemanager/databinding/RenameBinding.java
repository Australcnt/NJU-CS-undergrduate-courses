// Generated by view binder compiler. Do not edit!
package com.amaze.filemanager.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatEditText;
import androidx.viewbinding.ViewBinding;
import com.amaze.filemanager.R;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class RenameBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final AppCompatEditText editText;

  @NonNull
  public final AppCompatEditText editText4;

  @NonNull
  public final TextInputLayout t1;

  @NonNull
  public final TextInputLayout t2;

  private RenameBinding(@NonNull LinearLayout rootView, @NonNull AppCompatEditText editText,
      @NonNull AppCompatEditText editText4, @NonNull TextInputLayout t1,
      @NonNull TextInputLayout t2) {
    this.rootView = rootView;
    this.editText = editText;
    this.editText4 = editText4;
    this.t1 = t1;
    this.t2 = t2;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static RenameBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RenameBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.rename, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RenameBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.editText;
      AppCompatEditText editText = rootView.findViewById(id);
      if (editText == null) {
        break missingId;
      }

      id = R.id.editText4;
      AppCompatEditText editText4 = rootView.findViewById(id);
      if (editText4 == null) {
        break missingId;
      }

      id = R.id.t1;
      TextInputLayout t1 = rootView.findViewById(id);
      if (t1 == null) {
        break missingId;
      }

      id = R.id.t2;
      TextInputLayout t2 = rootView.findViewById(id);
      if (t2 == null) {
        break missingId;
      }

      return new RenameBinding((LinearLayout) rootView, editText, editText4, t1, t2);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
