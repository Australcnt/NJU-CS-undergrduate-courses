// Generated by view binder compiler. Do not edit!
package com.amaze.filemanager.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.amaze.filemanager.R;
import com.amaze.filemanager.ui.views.ThemedTextView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class RowlayoutBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ImageView apkIcon;

  @NonNull
  public final ImageView checkIcon;

  @NonNull
  public final TextView date;

  @NonNull
  public final View dummyView;

  @NonNull
  public final ThemedTextView firstline;

  @NonNull
  public final ImageView genericIcon;

  @NonNull
  public final TextView generictext;

  @NonNull
  public final RelativeLayout iconFrameGrid;

  @NonNull
  public final TextView permis;

  @NonNull
  public final ImageView pictureIcon;

  @NonNull
  public final ImageButton properties;

  @NonNull
  public final RelativeLayout second;

  @NonNull
  public final TextView secondLine;

  @NonNull
  public final RelativeLayout summary;

  private RowlayoutBinding(@NonNull RelativeLayout rootView, @NonNull ImageView apkIcon,
      @NonNull ImageView checkIcon, @NonNull TextView date, @NonNull View dummyView,
      @NonNull ThemedTextView firstline, @NonNull ImageView genericIcon,
      @NonNull TextView generictext, @NonNull RelativeLayout iconFrameGrid,
      @NonNull TextView permis, @NonNull ImageView pictureIcon, @NonNull ImageButton properties,
      @NonNull RelativeLayout second, @NonNull TextView secondLine,
      @NonNull RelativeLayout summary) {
    this.rootView = rootView;
    this.apkIcon = apkIcon;
    this.checkIcon = checkIcon;
    this.date = date;
    this.dummyView = dummyView;
    this.firstline = firstline;
    this.genericIcon = genericIcon;
    this.generictext = generictext;
    this.iconFrameGrid = iconFrameGrid;
    this.permis = permis;
    this.pictureIcon = pictureIcon;
    this.properties = properties;
    this.second = second;
    this.secondLine = secondLine;
    this.summary = summary;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static RowlayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RowlayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.rowlayout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RowlayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.apk_icon;
      ImageView apkIcon = rootView.findViewById(id);
      if (apkIcon == null) {
        break missingId;
      }

      id = R.id.check_icon;
      ImageView checkIcon = rootView.findViewById(id);
      if (checkIcon == null) {
        break missingId;
      }

      id = R.id.date;
      TextView date = rootView.findViewById(id);
      if (date == null) {
        break missingId;
      }

      id = R.id.dummy_view;
      View dummyView = rootView.findViewById(id);
      if (dummyView == null) {
        break missingId;
      }

      id = R.id.firstline;
      ThemedTextView firstline = rootView.findViewById(id);
      if (firstline == null) {
        break missingId;
      }

      id = R.id.generic_icon;
      ImageView genericIcon = rootView.findViewById(id);
      if (genericIcon == null) {
        break missingId;
      }

      id = R.id.generictext;
      TextView generictext = rootView.findViewById(id);
      if (generictext == null) {
        break missingId;
      }

      id = R.id.icon_frame_grid;
      RelativeLayout iconFrameGrid = rootView.findViewById(id);
      if (iconFrameGrid == null) {
        break missingId;
      }

      id = R.id.permis;
      TextView permis = rootView.findViewById(id);
      if (permis == null) {
        break missingId;
      }

      id = R.id.picture_icon;
      ImageView pictureIcon = rootView.findViewById(id);
      if (pictureIcon == null) {
        break missingId;
      }

      id = R.id.properties;
      ImageButton properties = rootView.findViewById(id);
      if (properties == null) {
        break missingId;
      }

      RelativeLayout second = (RelativeLayout) rootView;

      id = R.id.secondLine;
      TextView secondLine = rootView.findViewById(id);
      if (secondLine == null) {
        break missingId;
      }

      id = R.id.summary;
      RelativeLayout summary = rootView.findViewById(id);
      if (summary == null) {
        break missingId;
      }

      return new RowlayoutBinding((RelativeLayout) rootView, apkIcon, checkIcon, date, dummyView,
          firstline, genericIcon, generictext, iconFrameGrid, permis, pictureIcon, properties,
          second, secondLine, summary);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
