// Generated by view binder compiler. Do not edit!
package com.amaze.filemanager.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import com.amaze.filemanager.R;
import com.amaze.filemanager.ui.views.ThemedTextView;
import com.github.mikephil.charting.charts.LineChart;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ProcessparentBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final CardView cardView;

  @NonNull
  public final ImageButton deleteButton;

  @NonNull
  public final LineChart progressChart;

  @NonNull
  public final ImageView progressImage;

  @NonNull
  public final ThemedTextView textViewProgressBytes;

  @NonNull
  public final ThemedTextView textViewProgressFile;

  @NonNull
  public final ThemedTextView textViewProgressFileName;

  @NonNull
  public final ThemedTextView textViewProgressSpeed;

  @NonNull
  public final ThemedTextView textViewProgressTimer;

  @NonNull
  public final TextView textViewProgressType;

  private ProcessparentBinding(@NonNull FrameLayout rootView, @NonNull CardView cardView,
      @NonNull ImageButton deleteButton, @NonNull LineChart progressChart,
      @NonNull ImageView progressImage, @NonNull ThemedTextView textViewProgressBytes,
      @NonNull ThemedTextView textViewProgressFile,
      @NonNull ThemedTextView textViewProgressFileName,
      @NonNull ThemedTextView textViewProgressSpeed, @NonNull ThemedTextView textViewProgressTimer,
      @NonNull TextView textViewProgressType) {
    this.rootView = rootView;
    this.cardView = cardView;
    this.deleteButton = deleteButton;
    this.progressChart = progressChart;
    this.progressImage = progressImage;
    this.textViewProgressBytes = textViewProgressBytes;
    this.textViewProgressFile = textViewProgressFile;
    this.textViewProgressFileName = textViewProgressFileName;
    this.textViewProgressSpeed = textViewProgressSpeed;
    this.textViewProgressTimer = textViewProgressTimer;
    this.textViewProgressType = textViewProgressType;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ProcessparentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ProcessparentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.processparent, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ProcessparentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.card_view;
      CardView cardView = rootView.findViewById(id);
      if (cardView == null) {
        break missingId;
      }

      id = R.id.delete_button;
      ImageButton deleteButton = rootView.findViewById(id);
      if (deleteButton == null) {
        break missingId;
      }

      id = R.id.progress_chart;
      LineChart progressChart = rootView.findViewById(id);
      if (progressChart == null) {
        break missingId;
      }

      id = R.id.progress_image;
      ImageView progressImage = rootView.findViewById(id);
      if (progressImage == null) {
        break missingId;
      }

      id = R.id.text_view_progress_bytes;
      ThemedTextView textViewProgressBytes = rootView.findViewById(id);
      if (textViewProgressBytes == null) {
        break missingId;
      }

      id = R.id.text_view_progress_file;
      ThemedTextView textViewProgressFile = rootView.findViewById(id);
      if (textViewProgressFile == null) {
        break missingId;
      }

      id = R.id.text_view_progress_file_name;
      ThemedTextView textViewProgressFileName = rootView.findViewById(id);
      if (textViewProgressFileName == null) {
        break missingId;
      }

      id = R.id.text_view_progress_speed;
      ThemedTextView textViewProgressSpeed = rootView.findViewById(id);
      if (textViewProgressSpeed == null) {
        break missingId;
      }

      id = R.id.text_view_progress_timer;
      ThemedTextView textViewProgressTimer = rootView.findViewById(id);
      if (textViewProgressTimer == null) {
        break missingId;
      }

      id = R.id.text_view_progress_type;
      TextView textViewProgressType = rootView.findViewById(id);
      if (textViewProgressType == null) {
        break missingId;
      }

      return new ProcessparentBinding((FrameLayout) rootView, cardView, deleteButton, progressChart,
          progressImage, textViewProgressBytes, textViewProgressFile, textViewProgressFileName,
          textViewProgressSpeed, textViewProgressTimer, textViewProgressType);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
