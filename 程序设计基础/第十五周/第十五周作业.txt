Ex1. 设计程序完成下列功能：设有 M 个候选人，N 个选举人，每个选举人输入一个候选人姓名，最后输出各人得票数。
Ex2. 设计程序，对一个 N 个节点的单向链表中的一个 int 型数据成员求和（假设和非0），要求用递归函数实现求和功能：int SumR(Node *head);
Ex3. 设计程序，实现用链表存储输入的一个字符串，并用一个函数计算字符串的长度。
Ex4. 设计程序，首先用链表建立两个集合（从键盘输入集合的元素，以-1结束），然后计算这两个集合的交集、并集与一个差集，最后输出计算结果。
【复习】
课件；教材5.3
【预习】
教材5.4
【阅读】《编码的奥秘》第25章
【训练】
1. 调试课件例子程序，熟悉结构类型的构造、定义、初始化和操作方法，验证结构类型变量的赋值和值传递特性。
2. 应用结构类型重新实现字符串压缩和解压任务，以便对含有数字字符的字符串正确解压（该方法利于扩展，但压缩效果略差，为节省空间，字符的个数可定义为char类型代替int类型）。
3. 实现链表的起泡法排序函数：Node *ListBubbleSort(Node *head);
4. 设计并实现一个简单的机票管理系统。用单链表存储某航班已售机票信息（已售机票流水号、乘客姓名、机票价格、含日期的出售时间），系统业务功能包括售票、退票、按出售价格排序、客户查找等功能。
5. 判断一个单向链表中是否有环（即最后一个节点的next指针是否指向了链表中的某个节点），对无环的非空单向链表建立一个环（从链表最后一个节点指向第M个节点，其中，M可以是1、2、3、...），操作成功，返回true，否则（链表空），返回false。函数原型分别为：bool HasLoop(Node *head);及bool CreateLoop(Node *head, int m);
6. 实现findFirstCross函数：查找两个无环单向链表首个重合节点的位置，若无重合返回NULL。查找函数原型和链表的节点类型为“const Node *findFirstCross(const Node *headA, const Node *headB);”。	
7. 应用栈结构重新实现圆括号是否配对的检查任务。
8. 假设网络节点A和网络节点B之间的通信协议涉及四种格式的报文内容，通信时，先传送报文内容的格式种类，再传送相应格式的报文内容，每次只能发送一种格式的报文内容，四种报文内容的数据类型是结构类型StructType1~ StructType4，请用统一的数据类型描述整个报文（含格式种类和报文内容）。
9. （选做）输入一组图形数据，然后输出相应的图形。其中的图形可以是：线段、矩形和圆。（提示：一组图形数据可以用一个数组来表示和存储，数组中每个元素可以是结构类型，包括表示是何种图形的枚举类型成员，以及存储图形数据的联合类型成员，联合类型自身可以包括线段、矩形和圆三种结构类型成员，线段结构类型的成员对应端点坐标，矩形结构类型的成员对应左上角和右下角端点坐标，圆结构类型的成员对应半径和圆点坐标，每种图形的具体数据也用结构类型表示，是为了可以灵活设置其中成员的类型，例如，圆的半径可以是整数，也可以是小数。）