// Generated by view binder compiler. Do not edit!
package com.amaze.filemanager.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.amaze.filemanager.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class NotificationServiceSmallBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ProgressBar notificationServiceProgressBarSmall;

  @NonNull
  public final TextView notificationServiceTextViewFilenameSmall;

  @NonNull
  public final TextView notificationServiceTextViewWrittenSmall;

  @NonNull
  public final RelativeLayout notificationServiceTitleParentSmall;

  private NotificationServiceSmallBinding(@NonNull RelativeLayout rootView,
      @NonNull ProgressBar notificationServiceProgressBarSmall,
      @NonNull TextView notificationServiceTextViewFilenameSmall,
      @NonNull TextView notificationServiceTextViewWrittenSmall,
      @NonNull RelativeLayout notificationServiceTitleParentSmall) {
    this.rootView = rootView;
    this.notificationServiceProgressBarSmall = notificationServiceProgressBarSmall;
    this.notificationServiceTextViewFilenameSmall = notificationServiceTextViewFilenameSmall;
    this.notificationServiceTextViewWrittenSmall = notificationServiceTextViewWrittenSmall;
    this.notificationServiceTitleParentSmall = notificationServiceTitleParentSmall;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static NotificationServiceSmallBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static NotificationServiceSmallBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.notification_service_small, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static NotificationServiceSmallBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.notification_service_progressBar_small;
      ProgressBar notificationServiceProgressBarSmall = rootView.findViewById(id);
      if (notificationServiceProgressBarSmall == null) {
        break missingId;
      }

      id = R.id.notification_service_textView_filename_small;
      TextView notificationServiceTextViewFilenameSmall = rootView.findViewById(id);
      if (notificationServiceTextViewFilenameSmall == null) {
        break missingId;
      }

      id = R.id.notification_service_textView_written_small;
      TextView notificationServiceTextViewWrittenSmall = rootView.findViewById(id);
      if (notificationServiceTextViewWrittenSmall == null) {
        break missingId;
      }

      id = R.id.notification_service_title_parent_small;
      RelativeLayout notificationServiceTitleParentSmall = rootView.findViewById(id);
      if (notificationServiceTitleParentSmall == null) {
        break missingId;
      }

      return new NotificationServiceSmallBinding((RelativeLayout) rootView,
          notificationServiceProgressBarSmall, notificationServiceTextViewFilenameSmall,
          notificationServiceTextViewWrittenSmall, notificationServiceTitleParentSmall);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
