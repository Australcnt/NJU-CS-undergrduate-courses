// Generated by view binder compiler. Do not edit!
package com.amaze.filemanager.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.amaze.filemanager.R;
import com.amaze.filemanager.ui.views.WarnableTextInputLayout;
import com.google.android.material.textfield.TextInputEditText;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogEncryptAuthenticateBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextInputEditText editTextDialogEncryptPassword;

  @NonNull
  public final TextInputEditText editTextDialogEncryptPasswordConfirm;

  @NonNull
  public final TextInputEditText editTextEncryptSaveAs;

  @NonNull
  public final WarnableTextInputLayout tilEncryptPassword;

  @NonNull
  public final WarnableTextInputLayout tilEncryptPasswordConfirm;

  @NonNull
  public final WarnableTextInputLayout tilEncryptSaveAs;

  private DialogEncryptAuthenticateBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextInputEditText editTextDialogEncryptPassword,
      @NonNull TextInputEditText editTextDialogEncryptPasswordConfirm,
      @NonNull TextInputEditText editTextEncryptSaveAs,
      @NonNull WarnableTextInputLayout tilEncryptPassword,
      @NonNull WarnableTextInputLayout tilEncryptPasswordConfirm,
      @NonNull WarnableTextInputLayout tilEncryptSaveAs) {
    this.rootView = rootView;
    this.editTextDialogEncryptPassword = editTextDialogEncryptPassword;
    this.editTextDialogEncryptPasswordConfirm = editTextDialogEncryptPasswordConfirm;
    this.editTextEncryptSaveAs = editTextEncryptSaveAs;
    this.tilEncryptPassword = tilEncryptPassword;
    this.tilEncryptPasswordConfirm = tilEncryptPasswordConfirm;
    this.tilEncryptSaveAs = tilEncryptSaveAs;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogEncryptAuthenticateBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogEncryptAuthenticateBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_encrypt_authenticate, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogEncryptAuthenticateBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.edit_text_dialog_encrypt_password;
      TextInputEditText editTextDialogEncryptPassword = rootView.findViewById(id);
      if (editTextDialogEncryptPassword == null) {
        break missingId;
      }

      id = R.id.edit_text_dialog_encrypt_password_confirm;
      TextInputEditText editTextDialogEncryptPasswordConfirm = rootView.findViewById(id);
      if (editTextDialogEncryptPasswordConfirm == null) {
        break missingId;
      }

      id = R.id.edit_text_encrypt_save_as;
      TextInputEditText editTextEncryptSaveAs = rootView.findViewById(id);
      if (editTextEncryptSaveAs == null) {
        break missingId;
      }

      id = R.id.til_encrypt_password;
      WarnableTextInputLayout tilEncryptPassword = rootView.findViewById(id);
      if (tilEncryptPassword == null) {
        break missingId;
      }

      id = R.id.til_encrypt_password_confirm;
      WarnableTextInputLayout tilEncryptPasswordConfirm = rootView.findViewById(id);
      if (tilEncryptPasswordConfirm == null) {
        break missingId;
      }

      id = R.id.til_encrypt_save_as;
      WarnableTextInputLayout tilEncryptSaveAs = rootView.findViewById(id);
      if (tilEncryptSaveAs == null) {
        break missingId;
      }

      return new DialogEncryptAuthenticateBinding((ConstraintLayout) rootView,
          editTextDialogEncryptPassword, editTextDialogEncryptPasswordConfirm,
          editTextEncryptSaveAs, tilEncryptPassword, tilEncryptPasswordConfirm, tilEncryptSaveAs);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
