// Generated by view binder compiler. Do not edit!
package com.amaze.filemanager.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.amaze.filemanager.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class PropertiesDocumentBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView textViewDocumentAuthorTitle;

  @NonNull
  public final TextView textViewDocumentCreatedTitle;

  @NonNull
  public final TextView textViewDocumentCreatorTitle;

  @NonNull
  public final TextView textViewDocumentFormatTitle;

  @NonNull
  public final TextView textViewDocumentKeywordsTitle;

  @NonNull
  public final TextView textViewDocumentLocationTitle;

  @NonNull
  public final TextView textViewDocumentModifiedTitle;

  @NonNull
  public final TextView textViewDocumentOptimizedTitle;

  @NonNull
  public final TextView textViewDocumentPagesTitle;

  @NonNull
  public final TextView textViewDocumentPaperSizeTitle;

  @NonNull
  public final TextView textViewDocumentProducerTitle;

  @NonNull
  public final TextView textViewDocumentSecurityTitle;

  @NonNull
  public final TextView textViewDocumentSizeTitle;

  @NonNull
  public final TextView textViewDocumentSubjectTitle;

  @NonNull
  public final TextView textViewDocumentTypeTitle;

  private PropertiesDocumentBinding(@NonNull LinearLayout rootView,
      @NonNull TextView textViewDocumentAuthorTitle, @NonNull TextView textViewDocumentCreatedTitle,
      @NonNull TextView textViewDocumentCreatorTitle, @NonNull TextView textViewDocumentFormatTitle,
      @NonNull TextView textViewDocumentKeywordsTitle,
      @NonNull TextView textViewDocumentLocationTitle,
      @NonNull TextView textViewDocumentModifiedTitle,
      @NonNull TextView textViewDocumentOptimizedTitle,
      @NonNull TextView textViewDocumentPagesTitle,
      @NonNull TextView textViewDocumentPaperSizeTitle,
      @NonNull TextView textViewDocumentProducerTitle,
      @NonNull TextView textViewDocumentSecurityTitle, @NonNull TextView textViewDocumentSizeTitle,
      @NonNull TextView textViewDocumentSubjectTitle, @NonNull TextView textViewDocumentTypeTitle) {
    this.rootView = rootView;
    this.textViewDocumentAuthorTitle = textViewDocumentAuthorTitle;
    this.textViewDocumentCreatedTitle = textViewDocumentCreatedTitle;
    this.textViewDocumentCreatorTitle = textViewDocumentCreatorTitle;
    this.textViewDocumentFormatTitle = textViewDocumentFormatTitle;
    this.textViewDocumentKeywordsTitle = textViewDocumentKeywordsTitle;
    this.textViewDocumentLocationTitle = textViewDocumentLocationTitle;
    this.textViewDocumentModifiedTitle = textViewDocumentModifiedTitle;
    this.textViewDocumentOptimizedTitle = textViewDocumentOptimizedTitle;
    this.textViewDocumentPagesTitle = textViewDocumentPagesTitle;
    this.textViewDocumentPaperSizeTitle = textViewDocumentPaperSizeTitle;
    this.textViewDocumentProducerTitle = textViewDocumentProducerTitle;
    this.textViewDocumentSecurityTitle = textViewDocumentSecurityTitle;
    this.textViewDocumentSizeTitle = textViewDocumentSizeTitle;
    this.textViewDocumentSubjectTitle = textViewDocumentSubjectTitle;
    this.textViewDocumentTypeTitle = textViewDocumentTypeTitle;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static PropertiesDocumentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static PropertiesDocumentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.properties_document, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static PropertiesDocumentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.text_view_document_author_title;
      TextView textViewDocumentAuthorTitle = rootView.findViewById(id);
      if (textViewDocumentAuthorTitle == null) {
        break missingId;
      }

      id = R.id.text_view_document_created_title;
      TextView textViewDocumentCreatedTitle = rootView.findViewById(id);
      if (textViewDocumentCreatedTitle == null) {
        break missingId;
      }

      id = R.id.text_view_document_creator_title;
      TextView textViewDocumentCreatorTitle = rootView.findViewById(id);
      if (textViewDocumentCreatorTitle == null) {
        break missingId;
      }

      id = R.id.text_view_document_format_title;
      TextView textViewDocumentFormatTitle = rootView.findViewById(id);
      if (textViewDocumentFormatTitle == null) {
        break missingId;
      }

      id = R.id.text_view_document_keywords_title;
      TextView textViewDocumentKeywordsTitle = rootView.findViewById(id);
      if (textViewDocumentKeywordsTitle == null) {
        break missingId;
      }

      id = R.id.text_view_document_location_title;
      TextView textViewDocumentLocationTitle = rootView.findViewById(id);
      if (textViewDocumentLocationTitle == null) {
        break missingId;
      }

      id = R.id.text_view_document_modified_title;
      TextView textViewDocumentModifiedTitle = rootView.findViewById(id);
      if (textViewDocumentModifiedTitle == null) {
        break missingId;
      }

      id = R.id.text_view_document_optimized_title;
      TextView textViewDocumentOptimizedTitle = rootView.findViewById(id);
      if (textViewDocumentOptimizedTitle == null) {
        break missingId;
      }

      id = R.id.text_view_document_pages_title;
      TextView textViewDocumentPagesTitle = rootView.findViewById(id);
      if (textViewDocumentPagesTitle == null) {
        break missingId;
      }

      id = R.id.text_view_document_paper_size_title;
      TextView textViewDocumentPaperSizeTitle = rootView.findViewById(id);
      if (textViewDocumentPaperSizeTitle == null) {
        break missingId;
      }

      id = R.id.text_view_document_producer_title;
      TextView textViewDocumentProducerTitle = rootView.findViewById(id);
      if (textViewDocumentProducerTitle == null) {
        break missingId;
      }

      id = R.id.text_view_document_security_title;
      TextView textViewDocumentSecurityTitle = rootView.findViewById(id);
      if (textViewDocumentSecurityTitle == null) {
        break missingId;
      }

      id = R.id.text_view_document_size_title;
      TextView textViewDocumentSizeTitle = rootView.findViewById(id);
      if (textViewDocumentSizeTitle == null) {
        break missingId;
      }

      id = R.id.text_view_document_subject_title;
      TextView textViewDocumentSubjectTitle = rootView.findViewById(id);
      if (textViewDocumentSubjectTitle == null) {
        break missingId;
      }

      id = R.id.text_view_document_type_title;
      TextView textViewDocumentTypeTitle = rootView.findViewById(id);
      if (textViewDocumentTypeTitle == null) {
        break missingId;
      }

      return new PropertiesDocumentBinding((LinearLayout) rootView, textViewDocumentAuthorTitle,
          textViewDocumentCreatedTitle, textViewDocumentCreatorTitle, textViewDocumentFormatTitle,
          textViewDocumentKeywordsTitle, textViewDocumentLocationTitle,
          textViewDocumentModifiedTitle, textViewDocumentOptimizedTitle, textViewDocumentPagesTitle,
          textViewDocumentPaperSizeTitle, textViewDocumentProducerTitle,
          textViewDocumentSecurityTitle, textViewDocumentSizeTitle, textViewDocumentSubjectTitle,
          textViewDocumentTypeTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
