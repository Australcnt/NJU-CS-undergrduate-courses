【需要提交的作业（课程网站在线文本提交，每小题不含空白符的字(符)数：1~50）】

Ex1. 用指针 pa 操纵长度为 5 的数组 a（pa = a），设 pa 为 0X20000000，那么 pa + 2（元素 a[2] 的地址）为多少？若有“q = &a[3];”，则 q-pa 的值为多少？

Ex2. 为什么 scanf 库函数采用了指针型参数，而 printf 库函数没有采用？

【复习】
课件；教材5.2.1、5.2.3、5.2.4、5.5.1~5.5.3、5.5.5

【预习】
教材5.2.2、5.5.4、5.5.6、5.5.7、5.6；

【阅读】《编码的奥秘》第23章

【训练】
1. 判断下列对指针类型数据的初始化是否恰当，并上机验证。
int m = 3;
float f;
int *pi;
++pi;
pi = &f;
pi = &a;
float *pf = &f;
int a[5];
char ch;
char *pch = &ch;
int *pa = &a;
int *pn = pa;
int *pv = 0;
pn = 100;
pn = (int *)4096;
printf("*pn = %d \n", *pn);


2. 用指针pa操纵数组a：
（1）pa++表示pa先作为操作数，并将指向下一个元素，那么*pa++与*(pa++)是什么含义？
（2）++pa表示pa指向下一个元素，后作为操作数，那么*(pa=pa+1)、*(pa+=1)与*(++pa)的含义分别是什么？
（3）(*pa)++的含义呢？
（4）分析下面程序片段的输出结果。
int a[5] = {0, 1, 2, 3, 5};
int *pa = a;
int sum = 0;
for( ; pa <= a+4; ++pa)
	sum += *pa;
printf("%d ", sum);
pa = a;
++pa;
printf("%d ", *pa);
printf("%d ", *pa++);
printf("%d ", *pa);
printf("%d ", *(++pa));
++(*pa);
printf("%d \n", a[3]);

3. 调试课件中的例子程序，学习指针作为函数参数的用法，并体会传址调用方式下函数的副作用。

4. 编程实现将一个int型数组（用指针操纵）中存放的元素完全颠倒顺序存放。例如，对于int data[7] = {0,1,2,3,4,5,6}; 执行后，data[0]为6，data[6]为0。

5. 某同学写了如下程序，希望用0替换m、n中较大的数。请分析该程序输出结果，如果结果不正确，改正程序，并说明理由。
#include <stdio.h>
int *F(int m1, int n1);
int main( )
{
	int m = 5, n = 9;
	*F(m, n) = 0;	//相当于“int *p = F(m, n);”和“*p = 0;”两个语句的作用
	printf("%d, %d \n", m, n);
	return 0;
}
int *F(int m1, int n1)
{
	int *pm = &m1, *pn = &n1;
	if(m1 > n1)
		return pm;
	else
		return pn;
}

6. 写一个函数Map，它有三个参数。第一个参数是一个一维double型数组，第二个参数为数组元素个数，第三个参数是一个函数指针，它指向带有一个double型参数、返回值类型为double的函数。函数Map的功能是：把数组（第一个参数）的每个元素替换成 用它原来的值（作为参数）调用第三个参数所指向的函数得到的值。

7. 解释下面表述的含义：int * (*pfnPfnPp)(int(*)(int *, int), int **);