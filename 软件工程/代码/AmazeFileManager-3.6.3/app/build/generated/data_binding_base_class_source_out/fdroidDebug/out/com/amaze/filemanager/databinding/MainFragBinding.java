// Generated by view binder compiler. Do not edit!
package com.amaze.filemanager.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.swiperefreshlayout.widget.SwipeRefreshLayout;
import androidx.viewbinding.ViewBinding;
import com.amaze.filemanager.R;
import com.amaze.filemanager.ui.views.FastScroller;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class MainFragBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final SwipeRefreshLayout activityMainSwipeRefreshLayout;

  @NonNull
  public final FastScroller fastscroll;

  @NonNull
  public final ImageView image;

  @NonNull
  public final RecyclerView listView;

  @NonNull
  public final RelativeLayout noFilesRelative;

  @NonNull
  public final SwipeRefreshLayout nofilelayout;

  @NonNull
  public final TextView nofiletext;

  private MainFragBinding(@NonNull FrameLayout rootView,
      @NonNull SwipeRefreshLayout activityMainSwipeRefreshLayout, @NonNull FastScroller fastscroll,
      @NonNull ImageView image, @NonNull RecyclerView listView,
      @NonNull RelativeLayout noFilesRelative, @NonNull SwipeRefreshLayout nofilelayout,
      @NonNull TextView nofiletext) {
    this.rootView = rootView;
    this.activityMainSwipeRefreshLayout = activityMainSwipeRefreshLayout;
    this.fastscroll = fastscroll;
    this.image = image;
    this.listView = listView;
    this.noFilesRelative = noFilesRelative;
    this.nofilelayout = nofilelayout;
    this.nofiletext = nofiletext;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static MainFragBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static MainFragBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.main_frag, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static MainFragBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.activity_main_swipe_refresh_layout;
      SwipeRefreshLayout activityMainSwipeRefreshLayout = rootView.findViewById(id);
      if (activityMainSwipeRefreshLayout == null) {
        break missingId;
      }

      id = R.id.fastscroll;
      FastScroller fastscroll = rootView.findViewById(id);
      if (fastscroll == null) {
        break missingId;
      }

      id = R.id.image;
      ImageView image = rootView.findViewById(id);
      if (image == null) {
        break missingId;
      }

      id = R.id.listView;
      RecyclerView listView = rootView.findViewById(id);
      if (listView == null) {
        break missingId;
      }

      id = R.id.no_files_relative;
      RelativeLayout noFilesRelative = rootView.findViewById(id);
      if (noFilesRelative == null) {
        break missingId;
      }

      id = R.id.nofilelayout;
      SwipeRefreshLayout nofilelayout = rootView.findViewById(id);
      if (nofilelayout == null) {
        break missingId;
      }

      id = R.id.nofiletext;
      TextView nofiletext = rootView.findViewById(id);
      if (nofiletext == null) {
        break missingId;
      }

      return new MainFragBinding((FrameLayout) rootView, activityMainSwipeRefreshLayout, fastscroll,
          image, listView, noFilesRelative, nofilelayout, nofiletext);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
