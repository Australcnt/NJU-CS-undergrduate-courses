// Generated by view binder compiler. Do not edit!
package com.amaze.filemanager.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.amaze.filemanager.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class PropertiesAudioBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView textViewAudioBitrateTitle;

  @NonNull
  public final TextView textViewAudioChannelsTitle;

  @NonNull
  public final TextView textViewAudioCodecTitle;

  @NonNull
  public final TextView textViewAudioSampleRateTitle;

  private PropertiesAudioBinding(@NonNull LinearLayout rootView,
      @NonNull TextView textViewAudioBitrateTitle, @NonNull TextView textViewAudioChannelsTitle,
      @NonNull TextView textViewAudioCodecTitle, @NonNull TextView textViewAudioSampleRateTitle) {
    this.rootView = rootView;
    this.textViewAudioBitrateTitle = textViewAudioBitrateTitle;
    this.textViewAudioChannelsTitle = textViewAudioChannelsTitle;
    this.textViewAudioCodecTitle = textViewAudioCodecTitle;
    this.textViewAudioSampleRateTitle = textViewAudioSampleRateTitle;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static PropertiesAudioBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static PropertiesAudioBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.properties_audio, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static PropertiesAudioBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.text_view_audio_bitrate_title;
      TextView textViewAudioBitrateTitle = rootView.findViewById(id);
      if (textViewAudioBitrateTitle == null) {
        break missingId;
      }

      id = R.id.text_view_audio_channels_title;
      TextView textViewAudioChannelsTitle = rootView.findViewById(id);
      if (textViewAudioChannelsTitle == null) {
        break missingId;
      }

      id = R.id.text_view_audio_codec_title;
      TextView textViewAudioCodecTitle = rootView.findViewById(id);
      if (textViewAudioCodecTitle == null) {
        break missingId;
      }

      id = R.id.text_view_audio_sample_rate_title;
      TextView textViewAudioSampleRateTitle = rootView.findViewById(id);
      if (textViewAudioSampleRateTitle == null) {
        break missingId;
      }

      return new PropertiesAudioBinding((LinearLayout) rootView, textViewAudioBitrateTitle,
          textViewAudioChannelsTitle, textViewAudioCodecTitle, textViewAudioSampleRateTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
