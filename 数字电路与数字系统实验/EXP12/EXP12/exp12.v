
//=======================================================
//  This code is generated by Terasic System Builder
//=======================================================

module exp12(

	//////////// CLOCK //////////
	input 		          		CLOCK2_50,
	input 		          		CLOCK3_50,
	input 		          		CLOCK4_50,
	input 		          		CLOCK_50,

	//////////// KEY //////////
	input 		     [3:0]		KEY,

	//////////// SW //////////
	input 		     [9:0]		SW,

	//////////// LED //////////
	output		     [9:0]		LEDR,

	//////////// Seg7 //////////
	output		     [6:0]		HEX0,
	output		     [6:0]		HEX1,
	output		     [6:0]		HEX2,
	output		     [6:0]		HEX3,
	output		     [6:0]		HEX4,
	output		     [6:0]		HEX5,

	//////////// VGA //////////
	output		          		VGA_BLANK_N,
	output		     [7:0]		VGA_B,
	output		          		VGA_CLK,
	output		     [7:0]		VGA_G,
	output		          		VGA_HS,
	output		     [7:0]		VGA_R,
	output		          		VGA_SYNC_N,
	output		          		VGA_VS,

	//////////// Audio //////////
	input 		          		AUD_ADCDAT,
	inout 		          		AUD_ADCLRCK,
	inout 		          		AUD_BCLK,
	output		          		AUD_DACDAT,
	inout 		          		AUD_DACLRCK,
	output		          		AUD_XCK,

	//////////// PS2 //////////
	inout 		          		PS2_CLK,
	inout 		          		PS2_CLK2,
	inout 		          		PS2_DAT,
	inout 		          		PS2_DAT2,

	//////////// I2C for Audio and Video-In //////////
	output		          		FPGA_I2C_SCLK,
	inout 		          		FPGA_I2C_SDAT
);


initial
begin
clk=0;
end

reg clk;

wire [23:0] vga_data; 
wire [9:0] h_addr;
wire [9:0] v_addr;
wire [7:0] ascii_data;
wire [7:0] cur_ascii;
wire [7:0] ps_data;
wire [23:0] color;//颜色
wire [23:0] username;
wire [9:0] score;
wire [3:0] life;
wire [7:0] game_ui_ascii;
wire [1:0] mode;
wire [4:0] difficulty;
wire start;
wire cur_mode;
wire [3:0] gamefont;
wire [7:0] game_ascii;
wire [9:0] target;
wire [9:0] speed;
wire [7:0] main_ui_ascii;
wire fail;
wire succ;
wire clk_i2c;
wire reset;
wire [15:0] audiodata;
wire [15:0] PS_data_2_fre;
wire clk_i2f;
wire ready;
wire [9:0] x_now;
wire [9:0] y_now;


assign reset = ~KEY[0];
assign cur_mode=mode%2;
assign VGA_SYNC_N = 0;
assign VGA_CLK = clk;
assign x_now=h_addr/9;
assign y_now=v_addr/16;

vga_ctrl(clk,KEY[0], start, CLOCK_50, color, vga_data, h_addr, v_addr,
 VGA_HS, VGA_VS, VGA_BLANK_N, VGA_R, VGA_G, VGA_B);

get_vga(h_addr, v_addr, cur_ascii, vga_data,start,gamefont);
	
ps2_keyboard board(CLOCK_50,~KEY[3],PS2_CLK,PS2_DAT,ps_data,ready); 

get_ascii asciis(start, game_ui_ascii, game_ascii, main_ui_ascii, h_addr,cur_ascii);

get_panel paenls(ps_data,x_now,y_now,ready,fail,succ,clk,1,main_ui_ascii,mode,difficulty
	,username,color,);
	
GameUI my_GameUI(CLOCK_50, x_now, life, cur_mode, y_now, target, gameUIASCII, score, 
	speed, username,start);
	
GamePlaying my_GamePlaying(CLOCK_50,cur_mode,start,SW[9],ready,difficulty,ps_data,x_now-20, y_now,
	fail,succ,life,gamefont, game_ascii, target, speed,score);

audio_time u1(CLOCK_50, 0,AUD_XCK);

clkgen #(10000) my_i2c_clk(CLOCK_50,reset,1'b1,clk_i2c); 

I2C_Audio_Config myconfig(clk_i2c, KEY[0],FPGA_I2C_SCLK,FPGA_I2C_SDAT,0,SW[1:0]);

I2S_Audio myaudio(AUD_XCK, KEY[0], AUD_BCLK, AUD_DACDAT, AUD_DACLRCK, audiodata);

clkgen #(40) my_i2f_clk(CLOCK_50,reset,1'b1,clk_i2f); 

play_backgroumd_music(clk_i2f,mode,PS_data_2_fre);

Sin_Generator sin_wave(AUD_DACLRCK, KEY[0], PS_data_2_fre, audiodata);

always @(posedge CLOCK_50)
clk=~clk;

endmodule
