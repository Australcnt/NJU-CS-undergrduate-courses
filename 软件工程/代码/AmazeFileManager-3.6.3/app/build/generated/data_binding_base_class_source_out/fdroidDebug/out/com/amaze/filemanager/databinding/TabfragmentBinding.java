// Generated by view binder compiler. Do not edit!
package com.amaze.filemanager.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.amaze.filemanager.R;
import com.amaze.filemanager.ui.views.DisablableViewPager;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class TabfragmentBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final DragPlaceholderBinding dragPlaceholder;

  @NonNull
  public final DisablableViewPager pager;

  @NonNull
  public final View placeholderDragLeft;

  @NonNull
  public final View placeholderDragRight;

  private TabfragmentBinding(@NonNull ConstraintLayout rootView,
      @NonNull DragPlaceholderBinding dragPlaceholder, @NonNull DisablableViewPager pager,
      @NonNull View placeholderDragLeft, @NonNull View placeholderDragRight) {
    this.rootView = rootView;
    this.dragPlaceholder = dragPlaceholder;
    this.pager = pager;
    this.placeholderDragLeft = placeholderDragLeft;
    this.placeholderDragRight = placeholderDragRight;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static TabfragmentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static TabfragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.tabfragment, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static TabfragmentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.drag_placeholder;
      View dragPlaceholder = rootView.findViewById(id);
      if (dragPlaceholder == null) {
        break missingId;
      }
      DragPlaceholderBinding binding_dragPlaceholder = DragPlaceholderBinding.bind(dragPlaceholder);

      id = R.id.pager;
      DisablableViewPager pager = rootView.findViewById(id);
      if (pager == null) {
        break missingId;
      }

      id = R.id.placeholder_drag_left;
      View placeholderDragLeft = rootView.findViewById(id);
      if (placeholderDragLeft == null) {
        break missingId;
      }

      id = R.id.placeholder_drag_right;
      View placeholderDragRight = rootView.findViewById(id);
      if (placeholderDragRight == null) {
        break missingId;
      }

      return new TabfragmentBinding((ConstraintLayout) rootView, binding_dragPlaceholder, pager,
          placeholderDragLeft, placeholderDragRight);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
