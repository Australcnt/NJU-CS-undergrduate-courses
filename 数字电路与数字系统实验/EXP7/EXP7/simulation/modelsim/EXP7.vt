// Copyright (C) 2017  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench template that is freely editable to  
// suit user's needs .Comments are provided in each section to help the user    
// fill out necessary details.                                                  
// *****************************************************************************
// Generated on "10/15/2020 16:11:27"
                                                                                
// Verilog Test Bench template for design : EXP7
// 
// Simulation tool : ModelSim-Altera (Verilog)
// 

`timescale 1 ns/ 1 ps
module EXP7_vlg_tst();
// constants                                           
// general purpose registers
//reg eachvec;
// test vector input registers
reg clk;
reg [7:0] din;
reg [3:0] inaddr;
reg [3:0] outaddr;
reg we;
// wires                                               
wire [7:0]  dout1;
wire [7:0]  dout2;

// assign statements (if any)                          
EXP7 i1 (
// port map - connection between master ports and signals/registers   
	.clk(clk),
	.din(din),
	.dout1(dout1),
	.dout2(dout2),
	.inaddr(inaddr),
	.outaddr(outaddr),
	.we(we)
);
initial                                                
begin                                                  
// code that executes only once                        
// insert code here --> begin                          
    clk = 0; we = 1; din = 0; inaddr = 0; outaddr = 0; #5;
                     din = 8'b00000001; inaddr = 1; outaddr = 0; #5;
							din = 8'b00000010; inaddr = 4; outaddr = 5; #5;
							din = 8'b00000100; inaddr = 2; outaddr = 3; #5;
							din = 8'b00001000; inaddr = 3; outaddr = 7; #5;
 						   din = 8'b00010000; inaddr = 5; outaddr = 6; #5;
							din = 8'b00100000; inaddr = 7; outaddr = 2; #5;
							din = 8'b01000000; inaddr = 0; outaddr = 1; #5;
							din = 8'b10000000; inaddr = 6; outaddr = 4; #5;
							din = 8'b00000001; inaddr = 1; outaddr = 0; #5;
							din = 8'b00000010; inaddr = 4; outaddr = 5; #5;
							din = 8'b00000100; inaddr = 2; outaddr = 3; #5;
							din = 8'b00001000; inaddr = 3; outaddr = 7; #5;
 						   din = 8'b00010000; inaddr = 5; outaddr = 6; #5;
							din = 8'b00100000; inaddr = 7; outaddr = 2; #5;
							din = 8'b01000000; inaddr = 0; outaddr = 1; #5;
							din = 8'b10000000; inaddr = 6; outaddr = 4; #5;
    $stop;
end

always
begin
    #2 clk = ~clk;
	 #2 we = ~we;
end
// --> end                                             
//$display("Running testbench");                                                                          
//always                                                 
// optional sensitivity list                           
// @(event1 or event2 or .... eventn)                  
//begin                                                  
// code executes for every event on sensitivity list   
// insert code here --> begin                          
                                                       
//@eachvec;                                              
// --> end                                             
//end                                                    
endmodule

